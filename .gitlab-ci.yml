image: docker:24.0.2

services:
  - docker:dind

stages:
  - build
  - lint
  - test
  - release
  - deploy

variables:
  SERVICE_NAME: slave-api
  IMAGE_DB: postgres:15.2-bullseye
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker --version
  - docker compose version
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker build --pull -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

style:
  stage: lint
  before_script:
    - docker compose pull
  script:
    - docker compose run ${SERVICE_NAME} pycodestyle .
  allow_failure: true

test:
  stage: test
  before_script:
    - docker compose pull
    - docker compose up -d
  script:
    - docker compose run --rm ${SERVICE_NAME} python manage.py test --verbosity=3
    - docker compose run --rm ${SERVICE_NAME} coverage run manage.py test
    - docker compose run --rm ${SERVICE_NAME} coverage report
    - docker compose run --rm ${SERVICE_NAME} coverage erase
    # - docker compose run --rm app coverage report --fail-under=50

release-image:
  stage: release
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  dependencies:
    - build
  only:
    changes:
      - Dockerfile

deploy:
  stage: deploy
  script:
    # - ./scrips/deploy.sh
    echo "Falta fazer o script de deployment!"
  dependencies:
    - build
  only:
    - main
  environment: production
